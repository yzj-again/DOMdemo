{"version":3,"sources":["DOM.js"],"names":["window","dom","create","string","container","document","createElement","innerHTML","trim","content","firstChild","after","node","node2","parentNode","insertBefore","nextSibling","before","append","parent","appendChild","wrap","remove","removeChild","empty","childNodes","arr","x","push","attr","name","value","arguments","length","setAttribute","getAttribute","text","innerText","textContent","html","style","Object","arrayKey","class","add","className","classList","has","contains","on","eventName","fn","addEventListener","off","removeEventListener","find","selector","scope","querySelectorAll","children","siblings","Array","from","filter","n","next","nodeType","previous","previousSibling","each","nodeList","i","call","index","list"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAAA,OAAOC,GAAP,GAAa,EAAb;AACAA,IAAIC,MAAJ,GAAa,UAAUC,MAAV,EAAkB;AAC3B,QAAMC,YAAYC,SAASC,aAAT,CAAuB,UAAvB,CAAlB;AACAF,cAAUG,SAAV,GAAsBJ,OAAOK,IAAP,EAAtB,CAF2B,CAES;AACpC,WAAOJ,UAAUK,OAAV,CAAkBC,UAAzB;AACH,CAJD;AAKA;AACAT,IAAIU,KAAJ,GAAY,UAAUC,IAAV,EAAgBC,KAAhB,EAAuB;AAC/BD,SAAKE,UAAL,CAAgBC,YAAhB,CAA6BF,KAA7B,EAAoCD,KAAKI,WAAzC;AACJ;AACI;AACA;AACA;AACA;AACH,CAPD;AAQA;AACAf,IAAIgB,MAAJ,GAAa,UAAUL,IAAV,EAAgBC,KAAhB,EAAuB;AAChCD,SAAKE,UAAL,CAAgBC,YAAhB,CAA6BF,KAA7B,EAAoCD,IAApC;AACH,CAFD;AAGA;AACAX,IAAIiB,MAAJ,GAAa,UAAUC,MAAV,EAAkBP,IAAlB,EAAwB;AACjCO,WAAOC,WAAP,CAAmBR,IAAnB;AACH,CAFD;AAGA;AACAX,IAAIoB,IAAJ,GAAW,UAAUT,IAAV,EAAgBO,MAAhB,EAAwB;AAC/BlB,QAAIgB,MAAJ,CAAWL,IAAX,EAAiBO,MAAjB;AACAlB,QAAIiB,MAAJ,CAAWC,MAAX,EAAmBP,IAAnB;AACH,CAHD;AAIA;AACA;AACAX,IAAIqB,MAAJ,GAAa,UAAUV,IAAV,EAAgB;AACzBA,SAAKE,UAAL,CAAgBS,WAAhB,CAA4BX,IAA5B;AACA,WAAOA,IAAP;AACH,CAHD;AAIA;AACAX,IAAIuB,KAAJ,GAAY,UAAUL,MAAV,EAAkB;AAAA,QACnBM,UADmB,GACLN,MADK,CACnBM,UADmB,EACE;;AAC5B,QAAMC,MAAM,EAAZ;AACA,QAAIC,IAAIR,OAAOT,UAAf;AACA,WAAOiB,CAAP,EAAU;AACND,YAAIE,IAAJ,CAAS3B,IAAIqB,MAAJ,CAAWH,OAAOT,UAAlB,CAAT;AACAiB,YAAIR,OAAOT,UAAX;AACH;AACD;AACA,WAAOgB,GAAP;AACH,CAVD;AAWA;AACA;AACAzB,IAAI4B,IAAJ,GAAW,UAAUjB,IAAV,EAAgBkB,IAAhB,EAAsBC,KAAtB,EAA6B;AACpC,QAAIC,UAAUC,MAAV,KAAqB,CAAzB,EAA4B;AACxBrB,aAAKsB,YAAL,CAAkBJ,IAAlB,EAAwBC,KAAxB;AACH,KAFD,MAEO,IAAIC,UAAUC,MAAV,KAAqB,CAAzB,EAA4B;AAC/B,eAAOrB,KAAKuB,YAAL,CAAkBL,IAAlB,CAAP;AACH,KALmC,CAKnC;AACJ,CAND;AAOA;AACA7B,IAAImC,IAAJ,GAAS,UAAUxB,IAAV,EAAeT,MAAf,EAAuB;AAC5B,QAAG6B,UAAUC,MAAV,KAAmB,CAAtB,EAAwB;AACpB,YAAG,eAAcrB,IAAjB,EAAsB;AAClBA,iBAAKyB,SAAL,GAAelC,MAAf,CADkB,CACI;AACzB,SAFD,MAEQ;AACJS,iBAAK0B,WAAL,GAAiBnC,MAAjB;AACH,SALmB,CAKnB;AACJ,KAND,MAMM,IAAG6B,UAAUC,MAAV,KAAmB,CAAtB,EAAwB;AAC1B,YAAG,eAAcrB,IAAjB,EAAsB;AAClB,mBAAOA,KAAKyB,SAAZ,CADkB,CACI;AACzB,SAFD,MAEQ;AACJ,mBAAOzB,KAAK0B,WAAZ;AACH,SALyB,CAKzB;AACJ;AAEJ,CAfD;;AAiBA;AACArC,IAAIsC,IAAJ,GAAS,UAAU3B,IAAV,EAAeT,MAAf,EAAuB;AAC5B,QAAG6B,UAAUC,MAAV,KAAmB,CAAtB,EAAwB;AACpBrB,aAAKL,SAAL,GAAeJ,MAAf;AACH,KAFD,MAEM,IAAG6B,UAAUC,MAAV,KAAmB,CAAtB,EAAwB;AAC1B,eAAOrB,KAAKL,SAAZ;AACH;AAEJ,CAPD;AAQA;AACAN,IAAIuC,KAAJ,GAAU,UAAU5B,IAAV,EAAekB,IAAf,EAAoBC,KAApB,EAA0B;AAChC,QAAGC,UAAUC,MAAV,KAAmB,CAAtB,EAAwB;AACpB;AACArB,aAAK4B,KAAL,CAAWV,IAAX,IAAiBC,KAAjB;AACH,KAHD,MAGM,IAAGC,UAAUC,MAAV,KAAmB,CAAtB,EAAwB;AAC1B,YAAG,OAAOH,IAAP,KAAc,QAAjB,EAA0B;AACtB,mBAAOlB,KAAK4B,KAAL,CAAWV,IAAX,CAAP;AACH,SAFD,MAEM,IAAGA,gBAAgBW,MAAnB,EAA0B;AAC5B,iBAAK,IAAIC,QAAT,IAAqBZ,IAArB,EAA2B;AACvB;AACA;AACAlB,qBAAK4B,KAAL,CAAWE,QAAX,IAAqBZ,KAAKY,QAAL,CAArB;AACH;AACJ;AACJ;AAEJ,CAhBD;;AAkBA;AACAzC,IAAI0C,KAAJ,GAAU;AACNC,OADM,eACFhC,IADE,EACGiC,SADH,EACa;AACfjC,aAAKkC,SAAL,CAAeF,GAAf,CAAmBC,SAAnB;AACH,KAHK;AAINvB,UAJM,kBAICV,IAJD,EAIMiC,SAJN,EAIgB;AAClBjC,aAAKkC,SAAL,CAAexB,MAAf,CAAsBuB,SAAtB;AACH,KANK;AAONE,OAPM,eAOFnC,IAPE,EAOGiC,SAPH,EAOa;AACf,eAAOjC,KAAKkC,SAAL,CAAeE,QAAf,CAAwBH,SAAxB,CAAP;AACH;AATK,CAAV;AAYA;AACA5C,IAAIgD,EAAJ,GAAO,UAAUrC,IAAV,EAAesC,SAAf,EAAyBC,EAAzB,EAA6B;AAChCvC,SAAKwC,gBAAL,CAAsBF,SAAtB,EAAgCC,EAAhC;AACH,CAFD;;AAIAlD,IAAIoD,GAAJ,GAAQ,UAAUzC,IAAV,EAAesC,SAAf,EAAyBC,EAAzB,EAA6B;AACjCvC,SAAK0C,mBAAL,CAAyBJ,SAAzB,EAAmCC,EAAnC;AACH,CAFD;AAGAlD,IAAIsD,IAAJ,GAAS,UAAUC,QAAV,EAAmBC,KAAnB,EAA0B;AAC/B,WAAO,CAACA,SAAOpD,QAAR,EAAkBqD,gBAAlB,CAAmCF,QAAnC,CAAP;AACA;AACA;AACH,CAJD;AAKAvD,IAAIkB,MAAJ,GAAW,UAAUP,IAAV,EAAgB;AACvB,WAAOA,KAAKE,UAAZ;AACH,CAFD;AAGAb,IAAI0D,QAAJ,GAAa,UAAU/C,IAAV,EAAgB;AACzB,WAAOA,KAAK+C,QAAZ;AACH,CAFD;AAGA1D,IAAI2D,QAAJ,GAAa,UAAUhD,IAAV,EAAe;AACxB,WAAOiD,MAAMC,IAAN,CAAWlD,KAAKE,UAAL,CAAgB6C,QAA3B,EAAqCI,MAArC,CAA4C;AAAA,eAAGC,MAAIpD,IAAP;AAAA,KAA5C,CAAP;AACA;AACH,CAHD;AAIAX,IAAIgE,IAAJ,GAAS,UAAUrD,IAAV,EAAe;AACpB;AACA;AACA,QAAIe,IAAEf,KAAKI,WAAX;AACA,WAAOW,KAAKA,EAAEuC,QAAF,KAAa,CAAzB,EAA2B;AACvBvC,YAAEA,EAAEX,WAAJ,CADuB,CACR;AAClB;AACD,WAAOW,CAAP;AACH,CARD;AASA1B,IAAIkE,QAAJ,GAAa,UAAUvD,IAAV,EAAe;AACxB;AACA;AACA,QAAIe,IAAEf,KAAKwD,eAAX;AACA,WAAOzC,KAAKA,EAAEuC,QAAF,KAAa,CAAzB,EAA2B;AACvBvC,YAAEA,EAAEyC,eAAJ,CADuB,CACJ;AACtB;AACD,WAAOzC,CAAP;AACH,CARD;AASA1B,IAAIoE,IAAJ,GAAS,UAAUC,QAAV,EAAmBnB,EAAnB,EAAsB;AAC3B,SAAK,IAAIoB,IAAI,CAAb,EAAgBA,IAAID,SAASrC,MAA7B,EAAqCsC,GAArC,EAA0C;AACtCpB,WAAGqB,IAAH,CAAQ,IAAR,EAAaF,SAASC,CAAT,CAAb;AACH;AACJ,CAJD;AAKAtE,IAAIwE,KAAJ,GAAU,UAAU7D,IAAV,EAAe;AACrB,QAAM8D,OAAK,KAAKf,QAAL,CAAc,KAAKxC,MAAL,CAAYP,IAAZ,CAAd,CAAX;AACA,SAAI,IAAI2D,IAAE,CAAV,EAAYA,IAAEG,KAAKzC,MAAnB,EAA0BsC,GAA1B,EAA8B;AAC1B,YAAGG,KAAKH,CAAL,MAAU3D,IAAb,EAAkB;AACd,mBAAO2D,IAAE,CAAT;AACH;AACJ;AAEJ,CARD","file":"DOM.7600d7ae.map","sourceRoot":"..\\src","sourcesContent":["window.dom = {};\r\ndom.create = function (string) {\r\n    const container = document.createElement('template');\r\n    container.innerHTML = string.trim();//trim去掉文本，firstChild拿不到空格文本了\r\n    return container.content.firstChild;\r\n};\r\n//node后面插入节点node2\r\ndom.after = function (node, node2) {\r\n    node.parentNode.insertBefore(node2, node.nextSibling);\r\n//有bug，当node是最后一个节点时，它就没有nextsibling\r\n    //但是下一个节点是空白也会继续进行\r\n    //就算不换行也能插入\r\n    //<div><div>1</div></div>nextSibling是空也能行\r\n    //而且脚本引入也会出错\r\n};\r\n//node前面插入节点node2\r\ndom.before = function (node, node2) {\r\n    node.parentNode.insertBefore(node2, node);\r\n};\r\n//新增儿子节点append\r\ndom.append = function (parent, node) {\r\n    parent.appendChild(node);\r\n};\r\n//新增一个爸爸节点\r\ndom.wrap = function (node, parent) {\r\n    dom.before(node, parent);\r\n    dom.append(parent, node);\r\n};\r\n//删\r\n//删除自身\r\ndom.remove = function (node) {\r\n    node.parentNode.removeChild(node);\r\n    return node;\r\n};\r\n//删除所有儿子\r\ndom.empty = function (parent) {\r\n    const {childNodes} = parent;//解构赋值 const childNodes=node.childNodes\r\n    const arr = [];\r\n    let x = parent.firstChild;\r\n    while (x) {\r\n        arr.push(dom.remove(parent.firstChild))\r\n        x = parent.firstChild;\r\n    }\r\n    //childNodes回车、空格也是儿子\r\n    return arr;\r\n}\r\n//改\r\n//改title\r\ndom.attr = function (node, name, value) {\r\n    if (arguments.length === 3) {\r\n        node.setAttribute(name, value);\r\n    } else if (arguments.length === 2) {\r\n        return node.getAttribute(name);\r\n    }//重载----------\r\n}\r\n//修改文本内容\r\ndom.text=function (node,string) {\r\n    if(arguments.length===2){\r\n        if('innerText'in node){\r\n            node.innerText=string;//单独修改会删掉内部的p标签-无法避免\r\n        }  else {\r\n            node.textContent=string;\r\n        }//适配写法------------\r\n    }else if(arguments.length===1){\r\n        if('innerText'in node){\r\n            return node.innerText;//单独修改会删掉内部的p标签-无法避免\r\n        }  else {\r\n            return node.textContent;\r\n        }//适配写法------------\r\n    }\r\n\r\n}\r\n\r\n//改html\r\ndom.html=function (node,string) {\r\n    if(arguments.length===2){\r\n        node.innerHTML=string;\r\n    }else if(arguments.length===1){\r\n        return node.innerHTML;\r\n    }\r\n\r\n}\r\n//改style\r\ndom.style=function (node,name,value){\r\n    if(arguments.length===3){\r\n        //dom.style(div,color,'green')\r\n        node.style[name]=value;\r\n    }else if(arguments.length===2){\r\n        if(typeof name==='string'){\r\n            return node.style[name];\r\n        }else if(name instanceof Object){\r\n            for (let arrayKey in name) {\r\n                //key:border /color\r\n                //node.style.border=xxx\r\n                node.style[arrayKey]=name[arrayKey];\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\n//给元素添加class,class也是一个对象，给对象添加一个add()\r\ndom.class={\r\n    add(node,className){\r\n        node.classList.add(className);\r\n    },\r\n    remove(node,className){\r\n        node.classList.remove(className);\r\n    },\r\n    has(node,className){\r\n        return node.classList.contains(className);\r\n    }\r\n\r\n}\r\n//事件\r\ndom.on=function (node,eventName,fn) {\r\n    node.addEventListener(eventName,fn);\r\n}\r\n\r\ndom.off=function (node,eventName,fn) {\r\n    node.removeEventListener(eventName,fn);\r\n}\r\ndom.find=function (selector,scope) {\r\n    return (scope||document).querySelectorAll(selector);\r\n    //如果有scope，则在scope里查找\r\n    //如果没有，则在document里查找\r\n}\r\ndom.parent=function (node) {\r\n    return node.parentNode;\r\n};\r\ndom.children=function (node) {\r\n    return node.children;\r\n};\r\ndom.siblings=function (node){\r\n    return Array.from(node.parentNode.children).filter(n=>n!==node);\r\n    //伪数组转数组，然后进行过滤，排除自身\r\n}\r\ndom.next=function (node){\r\n    //return node.nextSibling\r\n    //直接用nextSibling会找到文本\r\n    let x=node.nextSibling\r\n    while (x && x.nodeType===3){\r\n        x=x.nextSibling//如果下一个节点是空，则直接返回x\r\n    }\r\n    return x;\r\n}\r\ndom.previous=function (node){\r\n    //return node.previousSibling\r\n    //直接用previousSibling会找到文本\r\n    let x=node.previousSibling\r\n    while (x && x.nodeType===3){\r\n        x=x.previousSibling//如果下一个节点是空，则直接返回x\r\n    }\r\n    return x;\r\n}\r\ndom.each=function (nodeList,fn){\r\n    for (let i = 0; i < nodeList.length; i++) {\r\n        fn.call(null,nodeList[i])\r\n    }\r\n}\r\ndom.index=function (node){\r\n    const list=this.children(this.parent(node));\r\n    for(let i=0;i<list.length;i++){\r\n        if(list[i]===node){\r\n            return i+1;\r\n        }\r\n    }\r\n\r\n}\r\n"]}